{"version":3,"sources":["../../src/schema/type.js"],"names":[],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;IAEM,U;AAEJ,sBAAY,IAAZ,EAAgC;AAAA,QAAd,OAAc,yDAAJ,EAAI;;AAAA;;AAE9B,SAAK,OAAL,GAAe,OAAf;AACA,SAAK,IAAL,GAAe,IAAf;AAED;;;;0BAEK,C,EAAG;AACP,aAAO,oBAAmB,CAAnB,EAAsB,KAAK,OAA3B,CAAP;AACD;;;4BAEO,C,EAAG;AACT,aAAO,sBAAqB,CAArB,EAAwB,KAAK,OAA7B,CAAP;AACD;;;2BAEM,C,EAAG;AACR,aAAO,qBAAoB,CAApB,EAAuB,KAAK,OAA5B,CAAP;AACD;;;2BAEM,C,EAAG;AACR,aAAO,qBAAoB,CAApB,EAAuB,KAAK,OAA5B,CAAP;AACD;;;6BAEQ,C,EAAG;AACV,aAAO,qBAAoB,CAApB,EAAuB,KAAK,OAA5B,CAAP;AACD;;;2BAEM,C,EAAG;AACR,aAAO,qBAAoB,CAApB,EAAuB,KAAK,OAA5B,CAAP;AACD;;;;;;;;;;;AAOH,SAAS,iBAAT,CAA2B,IAA3B,EAA+C;AAAA,MAAd,OAAc,yDAAJ,EAAI;;;AAE7C,SAAO,IAAI,UAAJ,CAAe,IAAf,EAAqB,OAArB,CAAP;AAED;;kBAEc,iB","file":"type.js","sourcesContent":["import ArrayValidator   from '../validate/array'\nimport BooleanValidator from '../validate/boolean'\nimport NumberValidator  from '../validate/number'\nimport ObjectValidator  from '../validate/object'\nimport StringValidator  from '../validate/string'\n\nclass SchemaType {\n\n  constructor(type, options = {}) {\n\n    this.options = options\n    this.type    = type\n\n  }\n\n  array(i) {\n    return new ArrayValidator(i, this.options)\n  }\n\n  boolean(i) {\n    return new BooleanValidator(i, this.options)\n  }\n\n  number(i) {\n    return new NumberValidator(i, this.options)\n  }\n\n  object(i) {\n    return new ObjectValidator(i, this.options)\n  }\n\n  password(i) {\n    return new StringValidator(i, this.options)\n  }\n\n  string(i) {\n    return new StringValidator(i, this.options)\n  }\n\n}\n\n/**\n * This was simply created to negate the need to say: new Type() for each schema property\n */\nfunction SchemaTypeWrapper(type, options = {}) {\n\n  return new SchemaType(type, options)\n\n}\n\nexport default SchemaTypeWrapper\n"]}
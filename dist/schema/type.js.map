{"version":3,"sources":["../../src/schema/type.js"],"names":[],"mappings":"AAAA;;;;;;;;AAEA;;;;AACA;;;;;;;;IAEM,U;AAEJ,sBAAY,IAAZ,EAAgC;AAAA,QAAd,OAAc,yDAAJ,EAAI;;AAAA;;AAE9B,SAAK,OAAL,GAAe,OAAf;AACA,SAAK,IAAL,GAAe,IAAf;AAED;;;;0BAEK,C,EAAG;;AAEP,aAAO,oBAAmB,CAAnB,EAAsB,KAAK,OAA3B,CAAP;AAED;;;6BAEQ,CAER;;;6BAEQ,CAER;;;2BAEM,C,EAAG;;AAER,aAAO,qBAAoB,CAApB,EAAuB,KAAK,OAA5B,CAAP;AAED;;;;;;;;;;;AAOH,SAAS,iBAAT,CAA2B,IAA3B,EAA+C;AAAA,MAAd,OAAc,yDAAJ,EAAI;;;AAE7C,SAAO,IAAI,UAAJ,CAAe,IAAf,EAAqB,OAArB,CAAP;AAED;;kBAEc,iB","file":"type.js","sourcesContent":["'use strict';\n\nimport ArrayValidator  from '../validate/array'\nimport StringValidator from '../validate/string'\n\nclass SchemaType {\n\n  constructor(type, options = {}) {\n\n    this.options = options\n    this.type    = type\n\n  }\n\n  array(i) {\n\n    return new ArrayValidator(i, this.options)\n\n  }\n\n  number() {\n\n  }\n\n  object() {\n\n  }\n\n  string(i) {\n\n    return new StringValidator(i, this.options)\n\n  }\n\n}\n\n/**\n * This was simply created to negate the need to say: new Type() for each schema property\n */\nfunction SchemaTypeWrapper(type, options = {}) {\n\n  return new SchemaType(type, options)\n\n}\n\nexport default SchemaTypeWrapper\n"]}
{"version":3,"sources":["../../src/validate/root.js"],"names":[],"mappings":";;;;;;;;;;IAAM,a;AAEJ,yBAAY,CAAZ,EAA6B;AAAA,QAAd,OAAc,yDAAJ,EAAI;;AAAA;;AAC3B,SAAK,CAAL,GAAe,CAAf;AACA,SAAK,OAAL,GAAe,OAAf;AACD;;;;;;;;;6BAKQ,E,EAAI;AAAA;;AAEX,UAAI,KAAK,KAAK,EAAL,EAAT;AACA,UAAG,GAAG,GAAN,EAAW,OAAO,EAAP;;AAEX,UAAI,UAAU,EAAd;;AAEA,aAAO,IAAP,CAAY,KAAK,OAAjB,EAA0B,OAA1B,CAAmC,UAAC,IAAD,EAAU;;AAE3C,YAAI,SAAS,MAAK,IAAL,EAAW,MAAK,OAAL,CAAa,IAAb,CAAX,CAAb;;AAEA,YAAG,OAAO,GAAV,EAAe;AACb,iBAAO,GAAP,CAAW,OAAX,GAAqB,IAArB;AACA,kBAAQ,IAAR,CAAa,OAAO,GAApB;AACD;AAEF,OATD;;AAWA,UAAG,QAAQ,MAAR,IAAkB,CAArB,EAAwB;AACtB,YAAG,EAAH,EAAO,OAAO,GAAG,IAAH,EAAS,IAAT,CAAP;;AAEP,eAAO,EAAC,OAAO,IAAR,EAAP;AACD;;AAED,UAAG,EAAH,EAAO,OAAO,GAAG,OAAH,CAAP;;AAEP,aAAO;AACL,aAAK;AADA,OAAP;AAID;;;;;;kBAIY,a","file":"root.js","sourcesContent":["class RootValidator {\n\n  constructor(i, options = {}) {\n    this.i       = i\n    this.options = options\n  }\n\n  /**\n   * Validate the rules passed.\n   */\n  validate(cb) {\n\n    var is = this.is()\n    if(is.err) return is\n\n    var results = []\n\n    Object.keys(this.options).forEach( (rule) => {\n\n      let result = this[rule](this.options[rule])\n\n      if(result.err) {\n        result.err.ruleKey = rule\n        results.push(result.err)\n      }\n\n    })\n\n    if(results.length == 0) {\n      if(cb) return cb(null, true)\n\n      return {valid: true}\n    }\n\n    if(cb) return cb(results)\n\n    return {\n      err: results\n    }\n\n  }\n\n}\n\nexport default RootValidator\n"]}